{"version":3,"sources":["todos.js"],"names":[],"mappings":"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","file":"todos-compiled.js","sourcesContent":["const todo = (state, action) => {\n\n    switch(action.type) {\n        case 'ADD_TODO':\n            return {\n                id: action.id,\n                text: action.text,\n                completed: false\n            };\n        case 'TOGGLE_TODO':\n            if(state.id !== action.id) {\n                return state;\n            }\n\n            return Object.assign({}, state, {completed:!state.completed});\n        default:\n            return state;\n\n    }\n};\n\nconst todos = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                todo(undefined, action)\n            ];\n\n        case 'TOGGLE_TODO':\n            return state.map(t =>  todo(t, action) );\n\n        default:\n            return state;\n    }\n};\n\nconst visibilityFilter = (\n    state = 'SHOW_ALL',\n    action\n) => {\n    switch(action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter;\n        default:\n            return state;\n    }\n};\n\nconst todoApp = (state = {}, action) => {\n    return {\n        todos: todos(\n            state.todos,\n            action\n        ),\n        visibilityFilter: visibilityFilter(\n            state.visibilityFilter,\n            action\n        )\n    }\n};\n\nconst testAddTodo = () => {\n    const stateBefore = [];\n    const stateAfter = [\n        {\n            id: 0,\n            text: 'Learn Redux',\n            completed: false\n        }\n    ];\n    const action = {\n        type: 'ADD_TODO',\n        id: 0,\n        text: 'Learn Redux'\n    };\n\n    deepFreeze(stateBefore);\n    deepFreeze(action);\n\n    expect(\n        todos(stateBefore, action)\n    ).toEqual(stateAfter);\n};\n\nconst testToggleTodo = () => {\n    const stateBefore = [\n        {\n            id: 0,\n            text: 'Learn Redux',\n            completed: false\n        },\n        {\n            id: 1,\n            text: 'Go shoping',\n            completed: false\n        }\n    ];\n    const action = {\n        type : 'TOGGLE_TODO',\n        id: 1\n    };\n    const stateAfter = [\n        {\n            id: 0,\n            text: 'Learn Redux',\n            completed: false\n        },\n        {\n            id: 1,\n            text: 'Go shoping',\n            completed: true\n        }\n    ];\n    deepFreeze(stateBefore);\n    deepFreeze(action);\n\n    expect(\n        todos(stateBefore, action)\n    ).toEqual(stateAfter);\n};\n\n//testAddTodo();\n//testToggleTodo();\nconst { createStore } = Redux;\nvar store = createStore(todoApp);\n\nconsole.log('Initial state');\nconsole.log(store.getState());\nconsole.log('-------------------');\n\nconsole.log('Dispatching ADD_TODO.');\nstore.dispatch({\n    type: 'ADD_TODO',\n    id: 0,\n    text: 'Learn Redux'\n});\n\nconsole.log('Current state');\nconsole.log(store.getState());\nconsole.log('-------------------');\n\nconsole.log('Dispatching ADD_TODO.');\nstore.dispatch({\n    type: 'ADD_TODO',\n    id: 1,\n    text: 'Go shopping'\n});\nconsole.log('Current state:');\nconsole.log(store.getState());\nconsole.log('--------------');\n\n\nconsole.log('Dispatching TOGGLE_TODO.');\nstore.dispatch({\n    type: 'TOGGLE_TODO',\n    id: 0\n});\nconsole.log('Current state:');\nconsole.log(store.getState());\nconsole.log('--------------');\n\nconsole.log('Dispatching SET_VISIBILITY_FILTER');\nstore.dispatch({\n    type: 'SET_VISIBILITY_FILTER',\n    filter: 'SHOW_COMPLETED'\n});\n\nconsole.log('Current state:');\nconsole.log(store.getState());\nconsole.log('--------------');\n\nconsole.log('All test passed');"]}